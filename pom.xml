<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.bitbucket.askllc.krausening</groupId>
    <artifactId>krausening-root</artifactId>
    <version>12-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Krausening</name>
    <description>Krausening is a library that allows for the externalization of property and configuration files from
        deployment units, such as WARs, EARs, uber JARs, etc. By ensuring that property files are external to deployment
        packages, these packages can be easily reused as-is to deploy to heterogeneous environments, circumventing
        the need to hack apart or rebuild the package to support property file modification.
    </description>
    <url>https://bitbucket.org/askllc/krausening</url>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Ryan Ashcraft</name>
            <email>dryanashcraft@gmail.com</email>
            <organization>Counterpointe Solutions, Inc.</organization>
            <organizationUrl>https://bitbucket.org/cpointe/</organizationUrl>
        </developer>
        <developer>
            <name>Eric Konieczny</name>
            <email>ekoniec1@gmail.com</email>
            <organization>Counterpointe Solutions, Inc.</organization>
            <organizationUrl>https://bitbucket.org/cpointe/</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:ssh://git@bitbucket.org/cpointe/krausening.git</connection>
        <developerConnection>scm:git:ssh://git@bitbucket.org/cpointe/krausening.git</developerConnection>
        <url>https://bitbucket.org/cpointe/krausening.git</url>
        <tag>HEAD</tag>
    </scm>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <modules>
        <module>krausening</module>
        <module>krausening-python</module>
    </modules>

    <properties>
        <version.habushu.plugin>2.0.0</version.habushu.plugin>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>


    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.bitbucket.cpointe.habushu</groupId>
                    <artifactId>habushu-maven-plugin</artifactId>
                    <version>${version.habushu.plugin}</version>
                    <extensions>true</extensions>
                    <configuration>
                        <pythonVersion>3.9.13</pythonVersion>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.10.1</version>
                    <configuration>
                        <source>1.7</source>
                        <target>1.7</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.20</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>3.0.0-M6</version>
                </plugin>
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>1.6.13</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.2.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.4.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>3.0.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <useReleaseProfile>false</useReleaseProfile>
                    <releaseProfiles>ossrh-release</releaseProfiles>
                    <!-- During release preparation, Habushu will automatically update the versions of Habushu modules
                        within their pyproject.toml configurations, however the maven-release-plugin will only commit
                        updates to pom.xml files.  In order to version control both pom.xml and pyproject.toml files
                        that are updated during release preparation, customize the preparation and completion goals
                        to additionally execute the scm:checkin goals -->
                    <preparationGoals>clean verify scm:checkin -Dmessage="[maven-release-plugin] prepare release"</preparationGoals>
                    <completionGoals>clean verify scm:checkin -Dmessage="[maven-release-plugin] prepare for next development iteration"</completionGoals>
                    <goals>deploy</goals>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <extensions>true</extensions>
                <!-- When performing a release, the nexus-staging-maven-plugin only intercepts and modifies the
                     deploy:deploy goal - Habushu's habushu:publish-to-pypi-repo goal remains as-is -->
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>false</autoReleaseAfterClose>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>ossrh-release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <configuration>
                            <failOnError>false</failOnError>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>